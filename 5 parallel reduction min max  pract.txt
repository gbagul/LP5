#include<iostream>
#include<omp.h>
#include<climits>
using namespace std;
void min_max(int arr[],int n)
{
  int minV = INT_MAX;
  int maxV = INT_MIN;
  #pragma omp parallel for reduction(min:minV,max:maxV)
  for(int i=0;i<n;i++)
  {
    if(arr[i]<minV)
    {
      minV=arr[i];
    }
    if(arr[i]>maxV)
    {
      maxV=arr[i];
    }
  }
  cout<<"Min : "<<minV<<"\n"<<"Max : "<<maxV;
}
void sum(int arr[],int n)
{
  int sum = 0;
  #pragma omp parallel for(+:sum)
  for(int i = 0; i<n;i++)
  {
    sum+=arr[i];
  }
  cout<<"Sum : "<<sum<<endl;
}
void average(int arr[],int n)
{
  int sum = 0;
  #pragma omp parallel for(+:sum)
  for(int i= 0 ;i<n;i++)
  {
     sum+=arr[i];
  }
  cout<<"Average : "<<(double)sum/n;
}
int main()
{
    int n;
    cout << "\nEnter the total number of elements: ";
    cin >> n;
    int *arr = new int[n];
    cout << "\nEnter the elements: ";
    for (int i = 0; i < n; i++) { 
      cin >> arr[i]; 
    }
    min_max(arr,n);
    sum(arr,n);
    average(arr,n);
    return 0;
}